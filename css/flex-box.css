/* https://css-tricks.com/snippets/css/a-guide-to-flexbox/ */

*,
*::after,
*::before {
  box-sizing: border-box; /* Con esto comienza a considerar el tamaño de la caja desde el borde */
}

.container {
  background-color: #333;
  width: 100%;
  height: 30vh;
  /* ----------------------------------- */
  display: inline-flex; /* Con esto aliniamos varias cajas en una linea , es decir cada caja ocupa el ancho de su contenido*/
  display: flex; /*Define que una caja sera flexbox de bloque o flexbox de linea.   La direccion por defecto de una caja flexbox es horizontal en fila y toma cada caja como un bloque*/
  /*   flex-direction: row | row-reverse | column | column-reverse; */
  /* flex-direction: row; /* Este es el valor por defecto no genera ningun cambio */
  /* -------------------------------------- */
  /* flex-direction, Define el eje principal(main,axis)rou para X, y column para Y */
  flex-direction: row-reverse; /* Con este los elemenos o cajas que estan en mi izq- se ubican a mi derecha o sea en la posicion contraria a la inicial ej 123---321*/
  flex-direction: column; /* Organiza los elementos del conteneder en una columna , al igual que los contenedores */
  flex-direction: column-reverse; /* Organiza los elementos del conteneder en una columna , al igual que los contenedores pero en este caso de abajo hacia arriba pero con el orden invertido*/
  flex-direction: row; /* Este es el valor por defecto no genera ningun cambio */
  /* ------------------------------------- */
  /* flex-wrap: nowrap | wrap | wrap-reverse; */

  flex-wrap: nowrap; /* Este es el valor por defecto y los agrupa dependiendo el flex-direction, este valor ignora el ancho y el alto, el trata de mantener todo el contenido en una sola linea*/
  flex-wrap: wrap; /* ete trata de ubicar cada contenedor en una linea tratando de mantener su ancho , este me genera varias lineas*/
  flex-wrap: nowrap;
  /* --------------------------------- */
  flex-flow: column wrap; /* El primer valor es para flex-direction y el segundo es para flex-wrap */

  flex-flow: row nowrap; /* Estos serian los valores por defecto */
  flex-flow: row wrap; /* nos genera una sola linea */
  flex-flow: row nowrap;
  /* ----------------------------------- */

  /*  justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly | start | end | left | right ... + safe | unsafe;
  
  justify-content Define la aliniacion de los elementos hijos con respecto del eje principal que la define flex-directions*/
  justify-content: flex-start; /* Este es el valor por defecto */
  justify-content: flex-end; /* Alinea todo a la derecha */
  justify-content: center; /* Alinea en el centro si hay suficiente espacio */
  justify-content: space-between; /* reparte los espacios entre los contenedore ubicando la primera en el principio y la ultima al final */
  justify-content: space-around; /* Reparte los espacios sobrantes entre todos los contenedores incluyendo el inicio y el final */
  justify-content: space-evenly;
  justify-content: flex-start; /* Este se utiliza cuando los flex estan orientados en columnas este es el valor por defecto*/
  justify-content: flex-end;
  justify-content: center;
  justify-content: space-between;
  justify-content: space-evenly;
  justify-content: space-around;
  justify-content: flex-start; /* Este se utiliza cuando los flex estan orientados en columnas este es el valor por defecto*/
  /* -------------------------------------------- */
  /* Como alinear en el eje transversal */
  /* align-items: stretch | flex-start | flex-end | center | baseline | first baseline | last baseline | start | end | self-start | self-end + ... safe | unsafe; */
  align-items: stretch; /* Este es el valor por defecto y los elementos se estiran al tamaño del padre*/
  align-items: center;
  align-items: baseline; /* los elementos se alinean a un mismo renglon */
  align-items: flex-end;
  align-items: stretch;
  /* ----------------------------------- */
  /*Define la alineacion de los hijos en el ejetransversal(Cross Axis), No Funciona cuando los hijos estan en UNA sola linea.(Cuando flex-wrap: nowrap)NO FUNCIONA
   align-content: flex-start | flex-end | center | space-between | space-around | space-evenly | stretch | start | end | baseline | first baseline | last baseline + ... safe | unsafe;

   para que funcione el stretch debemos de tener encuenta que los elementos hijos no tengan definido el valor de ancho y alto
 
 align-content: trabaja como un todo, con filas y columnas
   */
  align-content: flex-start;
}
.item {
  background-color: #666;
  /* width: 20%; */
  /*  height: 20%; */

  border: medium solid #999;
  /*  flex-grow: 0;
  flex-shrink: 1;
  flex-basis: auto;
  Estos son los valores por defecto y no afectan a los elementos hijos */
  flex-grow: 0;
  /* Cuando la caja flex-grow tenga espacio sobrante,es la habililidad o el factor de crecer, valor por defecto es 0, no se aceptan valores negativos*/
  flex-shrink: 1;
  /* Cuando la caja flex-shirnk NO tenga espacio sobrantees la habilidad o el factor de encogerce, valor por defecto es el 1, no acepta valores negativos */
  flex-basis: auto;
  flex-basis: 100px;
  /*Es el tamaño del elemento hijo dentro de la linea de la caja flexbox.
  Si la caja flexBox tiene direccion de fila, flex-basis representa el width.
  Si la caja flexBox tiene direccion de columna,flex-----basis representa el height. 
  El valor por defecto es auto  */

  /* ---------------------------------
   flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]

   flex- es un shorthan de las propiedades flex-grow, flex-shrink y flex-basis, en ese orden
  */

  flex: 0 1 150px;
  flex: 0 1 auto;
  /* order: Reprecenta el orden que tendran los elementos hijos en la caja flexbox, Valor por defecto 0.
Se aceptan valores positivos y negativos,
un valor menor siempre ira antes que un valor mayor */
  order: 0;

  /*  align-self: auto | flex-start | flex-end | center | baseline | stretch; 
  Esto permite anular la alineación predeterminada (o la especificada por elementos de alineación) para elementos flexibles individuales.
Sobre escribe el valñor de la propiedad align-item, solo para elementos hijos especificados
.*/
  align-self: stretch;
}
.item:nth-child(2) {
  /*  flex-shrink: 2; */
  order: 1;
}
.item:nth-child(3) {
  /* flex-grow: 2; */
  align-self: center;
}

/* .item:nth-child(2),
.item:nth-child(17) {
  font-size: 250%;
} */
