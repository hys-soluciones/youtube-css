/*  Regla CSS: consta de 2 parte:
 1. Selector
 2. Bloque de declaraciones{
    Atrbuto: valor
    }
    
    
    */
/* El @import es una mala practica en css porque es bloqueante */
/* @import url("otra-hoja.css"); */
h1 {
  color: orangered;
  background-color: skyblue;
  border: 3px;
  text-align: center;
}
/* Links de referencia y Documentacion*/

/* Existen 3 selectore basicos
-Etiqueta: Son elementos HTML
-Identificadores:atributos id-#
-Clases: atributo class  (.)simbolo del punto */
p {
  color: midnightblue;
}
/* Dar estilos con id se considera una mala practica */
#parrafo-2 {
  background-color: skyblue;
}
/* Las clases es lo mas recomendado ,
dar estilo con clases nos permite reutilizar nuestro codigo en css*/
.bg-skyblue {
  background-color: skyblue;
}
.bg-steelblue {
  background-color: steelblue;
}
.text-20 {
  font-size: 20px;
}
.text-32 {
  font-size: 32px;
}
.text-white {
  color: white;
}
.hijos-directos > li {
  background-color: thistle;
}
.hijos-descendientes b {
  background-color: thistle;
}
/* Los selectores de hermanos van a aplicar a los elementos que esten por debajo al elemento de referencia */
.hermanos-general ~ li {
  background-color: thistle;
}
/* El selector de hermanos abyacente aplica los estilos al elemento que esta inmediatamente por debajo del selector de referencia*/
.hermanos-abyacentes + li {
  background-color: thistle;
}
/* Selectores de Atributos nos permite aplicar estilos tomando como referencia cualquier atributo y lo coloco entre corchetes*/
.selectores-atributos a[href] {
  color: orangered;
}
.selectores-atributos a[target="-blank"] {
  font-weight: bold;
}
/* El comodin del * aplica el estilo si contiene el texto en cuestion */
.selectores-atributos a[href*="jonmircha"] {
  font-size: 24px;
}
/* El comodin del sircunflejo  ^  aplica al texto en cuestion en cualquir parte */
.selectores-atributos a[href^="http://"]
{
  text-decoration: none;
}
/* El comodin del $  aplica al texto en cuestion al final */
.selectores-atributos a[href$=".com"] {
  background-color: black;
}
/* El comodin del $  aplica al texto en cuestion al final */
.selectores-atributos a[href$=".com"] {
  background-color: black;
}
/* El comodin del ~ aplica el estilo al texto en cuestion en una lista separada por espacios */
.selectores-atributos a[class~="cursos"] {
  background-color: mediumblue;
}
/* El comodin del| aplica el estilo al texto en cuestion en una lista separada por espacios y que despues del texto en cuestion yebe un - guion medio*/
.selectores-atributos a[class|="menu"] {
  font-style: italic;
}
/* Selctor Universal */
* {
  font-family: sans-serif;
}
.selector-universal * {
  font-size: 24px;
  font-style: tahoma;
}
/* Pseudoclases dan estilos dependiendo del contexto , posicion o estado del elemento 
 https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-classes
 */
.form-pseudoclases *:required {
  border-color: yellow;
}
.form-pseudoclases *:valid {
  border-color: rgb(32, 128, 0);
}
.form-pseudoclases *:invalid {
  border-color: rgb(128, 0, 11);
}
.form-pseudoclases *:focus {
  background-color: skyblue;
}
.form-pseudoclases *:disabled {
  background-color: pink;
}
.menu-pseudoclases a:visited {
  color: olive;
}
.menu-pseudoclases a:hover {
  color: orange;
}
.p-pseudoclases:hover {
  font-size: 20px;
}
#temario-css:target {
  background-color: lightgreen;
}
.lista-pseudoclases li:first-child {
  color: green;
}
.lista-pseudoclases li:last-child {
  color: violet;
}
.lista-pseudoclases li:nth-child(3) {
  color: navy;
}
.lista-pseudoclases li:nth-child(4n) {
  font-size: 20px;
}
.lista-pseudoclases li:nth-child(3n + 1) {
  font-weight: bold;
}
.lista-pseudoclases li:nth-child(even) {
  background-color: yellow;
}
.lista-pseudoclases li:nth-child(odd) {
  background-color: orange;
}
.articulo-pseudoclases p:first-of-type {
  background-color: pink;
}
.articulo-pseudoclases p:last-of-type {
  background-color: violet;
}
.articulo-pseudoclases p:nth-of-type(3) {
  background-color: fuchsia;
}
.articulo-pseudoclases *:not(p) {
  background-color: rgb(176, 176, 11);
}
/* 
Los pseudoelementos dan estilos a partes epecificas de un elemento y para diferenciarlos de las pseudoclases se utilizan los ::
 */
.saga-geminis::before {
  content: " /*/";
}
.saga-geminis::after {
  content: "/*/";
}
.saga-precio::before {
  content: " $ ";
  font-weight: bold;
}
.saga-precio::after {
  content: " Dolares ";
  font-weight: bold;
}
.p-pseudoelemento::first-letter {
  font-weight: bold;
  font-size: 32px;
}
.p-pseudoelemento::first-line {
  color: coral;
}
.p-pseudoelemento::selection {
  color: greenyellow;
  background-color: rgba(4, 2, 14, 0.93);
}
.input-pseudoelemento::placeholder {
  color: green;
}
/* Agregar selectores */
.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores textarea {
  border-color: yellow;
  border-width: 2px;
  border-style: dashed;
  background-color: black;
  font-size: 20px;
  display: block;
  width: 300px;
}
/* 
El Algoritmo de CSS:Es la forma en que el navegador aplica los estilos al documento HTML, es vital entender este concepto, para que entiendas como se aplican y en algunas ocaciones se sobreescriben las reglas CSS.
1)La Cascada
2)La Especificidad
3)La Herencia
*/
/* 
1)La Cascada es el mecanismo en que el navegador aplica los estilos y toma en cuenta lo sieguiente en este orden
  a)El origen del codigo:
  --El User Agent(Los estilos por defecto del navegador).
  --Personalizaciones del usuario.
  --Los estilos del autor.
  b)La Especificidad del selector.
  c)Orden de aparicion.
*/
/* 
La Especificidad es el peso que tiene un selector cuando hay conflictos de estos, se calcula de la siguiente forma:
Etiquetas y pseudoelementos-----------0001.
Clases, Atributos y pseudoclases------0010.
Identificadores-----------------------0100.
Etilos en linea-----------------------1000.
Important----------Rompen la especificidad.
*/
/* 
La Herencia: Es la capacidad de un selector de optener(heredar) los valores de sus ansestros mas sercanos. para aplicar se usa el valor((inherit)) y si queremos evitarla podemos asicnar otro valor o propiedad ((initial))
https://web.dev/learn/css/inheritance/#which-properties-are-inheritable
*/
blockquote#cita-autor.cita-autor {
  background-color: lightsteelblue;
}
blockquote {
  background-color: burlywood;
}
#cita-autor {
  background-color: lightgreen;
}
blockquote.cita-autor {
  background-color: tomato;
}
.cita-autor {
  background-color: cornflowerblue;
}
.cita-autor {
  background-color: mediumaquamarine !important;
}
blockquote#cita-autor {
  background-color: lightsalmon;
}
.cita-autor {
  background-color: moccasin !important;
  font-size: 32px;
  border-style: dotted;
  border-color: red;
}

.cita-autor cite {
  background-color: pink;
  background-color: moccasin;
  font-size: 24px;
  border-style: inherit;
}
